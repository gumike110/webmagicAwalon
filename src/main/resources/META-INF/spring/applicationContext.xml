<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"   
       xmlns:context="http://www.springframework.org/schema/context"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mongo="http://www.springframework.org/schema/data/mongo"
       xmlns:task="http://www.springframework.org/schema/task"
       xsi:schemaLocation="  
        http://www.springframework.org/schema/beans   
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd   
        http://www.springframework.org/schema/context   
        http://www.springframework.org/schema/context/spring-context-4.0.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-4.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
        http://www.springframework.org/schema/data/mongo
		http://www.springframework.org/schema/data/mongo/spring-mongo-1.8.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task-4.1.xsd"> 
        
    <context:component-scan base-package="org.spf">
    	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
    
    <!-- spring-task注解扫描任务 -->
	<!-- <task:executor id="executor" pool-size="1" /> 
	<task:scheduler id="scheduler" pool-size="1" />  -->
	<task:annotation-driven />

    
    <context:property-placeholder location="classpath:/META-INF/spring/mongodb.properties"/>
    
	
	<!-- mysql-mybitis begin-->
	<!--<bean id="spfMySQL"
		class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url"
			value="jdbc:MySQL://localhost:3306/spf?useUnicode=true&amp;characterEncoding=utf8" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<bean id="spfSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="spfMySQL" />
		<property name="mapperLocations" value="classpath*:/META-INF/**/*Mapper.xml" />
		<property name="configLocation" value="classpath:/META-INF/mybatis/mybatis.xml" />
	</bean>
	
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.spf.repository" />
        <property name="annotationClass" value="org.springframework.stereotype.Repository" />
        <property name="sqlSessionFactoryBeanName" value="spfSqlSessionFactory" />
    </bean>   -->
    <!-- mysql-mybitis end-->
    
     <!-- 通过工厂Bean创建mongo连接实例,没有密码就把username和password属性删除了-->
    <mongo:db-factory host="${db.host}" port="${db.port}" dbname="${db.database}"/>
    <!--username="${db.username}" password="${db.password}"   /> -->
    
    <!-- 去掉_class属性字段 =====start -->
    <bean id="mappingContext" class="org.springframework.data.mongodb.core.mapping.MongoMappingContext" />  
        <!-- 默认Mongodb类型映射 -->  
    <bean id="defaultMongoTypeMapper" class="org.springframework.data.mongodb.core.convert.DefaultMongoTypeMapper">  
        <constructor-arg name="typeKey">  
            <null />	<!-- 这里设置为空,可以把 spring data mongodb 多余保存的_class字段去掉 -->  
        </constructor-arg>  
    </bean>  
   
	   
	<bean id="mappingMongoConverter"  
	   class="org.springframework.data.mongodb.core.convert.MappingMongoConverter">  
	   <constructor-arg name="mongoDbFactory" ref="mongoDbFactory" />  
	   <constructor-arg name="mappingContext" ref="mappingContext" />  
	   <property name="typeMapper" ref="defaultMongoTypeMapper" />  
	</bean>  
    
    
    <!-- mongo模板操作对象 -->
    <bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
        <constructor-arg name="mongoDbFactory" ref="mongoDbFactory"/>
        <constructor-arg name="mongoConverter" ref="mappingMongoConverter" />  
	</bean>
    
    <!-- flyway begin-->
    <!--<bean id="flywayBobcatLog" class="org.flywaydb.core.Flyway" init-method="migrate">
        <property name="dataSource" ref="spfMySQL" />
    </bean>-->
    <!-- flyway end-->
    
    
    
    
</beans>